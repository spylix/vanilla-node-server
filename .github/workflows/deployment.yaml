name: deployment
"on":
  push:
    branches:
      - azure-hosting
  workflow_dispatch: {}
env:
  ACR_RESOURCE_GROUP: vnsRG
  AZURE_CONTAINER_REGISTRY: vnsacr
  CLUSTER_NAME: vnsAKS
  CLUSTER_RESOURCE_GROUP: vnsRG
  CONTAINER_NAME: vanilla-node-server
  DEPLOYMENT_MANIFEST_PATH: ./server.yaml
jobs:
  runTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        run: yarn
      - name: Run eslint
        run: yarn lint
      - name: Run tests
        run: yarn test
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - runTests
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1.4.3
        name: Azure login
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push image to ACR
        run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile ./
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - buildImage
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1.4.3
        name: Azure login
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/aks-set-context@v3
        name: Get K8s context
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      - uses: Azure/k8s-deploy@v4
        name: Deploys application
        with:
          action: deploy
          images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
